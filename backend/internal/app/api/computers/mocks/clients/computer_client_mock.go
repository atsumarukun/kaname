// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/api/computers/domain/clients/computer.go

// Package mock_clients is a generated GoMock package.
package mock_clients

import (
	net "net"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockComputerClient is a mock of ComputerClient interface.
type MockComputerClient struct {
	ctrl     *gomock.Controller
	recorder *MockComputerClientMockRecorder
}

// MockComputerClientMockRecorder is the mock recorder for MockComputerClient.
type MockComputerClientMockRecorder struct {
	mock *MockComputerClient
}

// NewMockComputerClient creates a new mock instance.
func NewMockComputerClient(ctrl *gomock.Controller) *MockComputerClient {
	mock := &MockComputerClient{ctrl: ctrl}
	mock.recorder = &MockComputerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockComputerClient) EXPECT() *MockComputerClientMockRecorder {
	return m.recorder
}

// Wake mocks base method.
func (m *MockComputerClient) Wake(arg0 string, arg1 net.HardwareAddr) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Wake", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Wake indicates an expected call of Wake.
func (mr *MockComputerClientMockRecorder) Wake(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wake", reflect.TypeOf((*MockComputerClient)(nil).Wake), arg0, arg1)
}
